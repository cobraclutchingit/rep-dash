groups:
  - name: postgres_alerts
    rules:
      # PostgreSQL high connection count
      - alert: PostgresqlHighConnectionCount
        expr: sum(pg_stat_activity_count) > (pg_settings_max_connections{job="postgresql"} * 0.8)
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high connection count'
          description: "PostgreSQL connections are above 80% of max connections\n  VALUE = {{ $value }}\n  MAX = {{ $labels.pg_settings_max_connections }}"

      # PostgreSQL low connection count
      - alert: PostgresqlTooManyConnections
        expr: sum(pg_stat_activity_count) > (pg_settings_max_connections{job="postgresql"} * 0.9)
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: 'PostgreSQL too many connections'
          description: "PostgreSQL connections are above 90% of max connections\n  VALUE = {{ $value }}\n  MAX = {{ $labels.pg_settings_max_connections }}"

      # PostgreSQL slow queries
      - alert: PostgresqlSlowQueries
        expr: pg_stat_activity_max_tx_duration{datname!~"template.*|postgres"} > 300
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL slow queries (instance {{ $labels.instance }})'
          description: "PostgreSQL transactions running for more than 5 minutes\n  VALUE = {{ $value }}s\n  LABELS = {{ $labels }}"

      # PostgreSQL high connection utilization
      - alert: PostgresqlHighConnectionUtilization
        expr: (sum(pg_stat_activity_count{datname!~"template.*|postgres"}) by (datname) / pg_settings_max_connections * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high connection utilization (instance {{ $labels.instance }})'
          description: "PostgreSQL connection utilization is above 80%\n  VALUE = {{ $value }}%\n  LABELS = {{ $labels }}"

      # PostgreSQL replication lag
      - alert: PostgresqlReplicationLag
        expr: pg_stat_replication_lag_bytes > 100000000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL replication lag (instance {{ $labels.instance }})'
          description: "PostgreSQL replication is lagging by more than 100MB\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # PostgreSQL dead locks
      - alert: PostgresqlDeadlocks
        expr: rate(pg_stat_database_deadlocks{datname!~"template.*|postgres"}[5m]) > 0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL deadlocks (instance {{ $labels.instance }})'
          description: "PostgreSQL detected deadlocks\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      # PostgreSQL high cache miss ratio
      - alert: PostgresqlHighCacheMissRatio
        expr: (sum(pg_stat_database_blks_read{datname!~"template.*|postgres"}) - sum(pg_stat_database_blks_hit{datname!~"template.*|postgres"})) / sum(pg_stat_database_blks_read{datname!~"template.*|postgres"}) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high cache miss ratio (instance {{ $labels.instance }})'
          description: "PostgreSQL cache miss ratio is above 10%\n  VALUE = {{ $value * 100 }}%\n  LABELS = {{ $labels }}"

      # PostgreSQL high rollback rate
      - alert: PostgresqlHighRollbackRate
        expr: rate(pg_stat_database_xact_rollback{datname!~"template.*|postgres"}[5m]) / (rate(pg_stat_database_xact_commit{datname!~"template.*|postgres"}[5m]) + rate(pg_stat_database_xact_rollback{datname!~"template.*|postgres"}[5m])) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL high rollback rate (instance {{ $labels.instance }})'
          description: "PostgreSQL rollback rate is above 10%\n  VALUE = {{ $value * 100 }}%\n  LABELS = {{ $labels }}"

      # PostgreSQL table bloat
      - alert: PostgresqlTableBloat
        expr: pg_stat_user_tables_n_dead_tup / pg_stat_user_tables_n_live_tup > 0.1
        for: 60m
        labels:
          severity: warning
        annotations:
          summary: 'PostgreSQL table bloat (instance {{ $labels.instance }})'
          description: "Table bloat is above 10%. Consider running VACUUM\n  VALUE = {{ $value * 100 }}%\n  LABELS = {{ $labels }}"
